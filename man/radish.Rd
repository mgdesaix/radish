% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/radish_optimize.R
\name{radish}
\alias{radish}
\title{Optimize a parameterized conductance surface}
\usage{
radish(
  formula,
  data,
  conductance_model = radish::loglinear_conductance,
  measurement_model = radish::mlpe,
  nu = NULL,
  theta = NULL,
  leverage = TRUE,
  nonnegative = TRUE,
  conductance = TRUE,
  optimizer = c("newton", "bfgs"),
  control = NewtonRaphsonControl(verbose = TRUE, ctol = 1e-06, ftol = 1e-06),
  validate = FALSE
)
}
\arguments{
\item{formula}{A formula with the name of a matrix of observed genetic distances on the lhs, and covariates in the creation of 'data' on the rhs}

\item{data}{An object of class 'radish_graph'}

\item{conductance_model}{A function of class 'radish_conductance_model_factory'}

\item{measurement_model}{A function of class 'radish_measurement_model'}

\item{nu}{Number of genetic markers (potentially used by 'measurement_model')}

\item{theta}{Starting values for optimization}

\item{leverage}{Compute influence measures and leverage?}

\item{nonnegative}{Force regression-like 'measurement_model' to have nonnegative slope?}

\item{conductance}{If TRUE, edge conductance is the sum of cell conductances; otherwise edge conductance is the inverse of the sum of cell resistances (NOT USED; TODO)}

\item{optimizer}{The optimization algorithm to use: "newton" uses the exact Hessian, so computational cost grows linearly with the number of parameters; while "bfgs" uses an approximation with much reduced cost (but slower overall convergence)}

\item{control}{A list containing options for the optimization routine (see ?NewtonRaphsonControl for list)}

\item{validate}{Numerical validation of leverage via 'numDeriv' (very slow, use for debugging small examples)}
}
\value{
An object of class 'radish'
}
\description{
Calculates likelihood, gradient, hessian, and partial derivatives of a
parameterized conductance surface, given a function mapping spatial data to
conductance and a function mapping resistance distance (covariance) to
genetic distance.
}
\details{
If the fit is on the boundary (e.g. no spatial genetic structure) or is the null model of isolation-by-distance, the resulting object will not contain influence/leverage/gradient/hessian.
}
\examples{
library(raster)

data(melip)

covariates <- raster::stack(list(altitude=melip.altitude, forestcover=melip.forestcover))
surface <- conductance_surface(covariates, melip.coords, directions = 8)

fit_mlpe <- radish(melip.Fst ~ altitude * forestcover, surface, 
                   radish::loglinear_conductance, radish::mlpe)
summary(fit_mlpe)

fit_nnls <- radish(melip.Fst ~ altitude * forestcover, surface, 
                   radish::loglinear_conductance, radish::leastsquares)
summary(fit_nnls)

}
