% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/radish_graph.R
\name{conductance_surface}
\alias{conductance_surface}
\title{Create a parameterized conductance surface}
\usage{
conductance_surface(
  formula,
  covariates,
  coords,
  directions = 4,
  saveStack = TRUE
)
}
\arguments{
\item{formula}{A 'formula' object for the spatial data in 'covariates' (see 'Details')}

\item{covariates}{A 'RasterStack' containing spatial covariates}

\item{coords}{A 'SpatialPoints' object containing coordinates for a set of target cells}

\item{directions}{If '4', consider only horizontal/vertical neighbours as adjacent; if '8', also consider diagonal neighbours as adjacent}

\item{saveStack}{If TRUE, the modified RasterStack is returned}
}
\value{
An object of class 'radish_graph'
}
\description{
Given a set of spatial covariates (as a 'RasterStack') and a set of
spatial coordinates (class 'SpatialPoints'), create an abstract parameterized
conductance surface.
}
\details{
NAs are shared across components of the RasterStack, and a warning is thrown if a given cell has mixed NA and non-NA values across the stack. Be cautious about comparing models when this is the case, as models fit to conductance surfaces with different NA patterns will have different sets of vertices.

Disconnected components are identified and removed, so that only the largest connected component is retained.

The spatial data that is ultimately used in 'radish' (by an object of class 'conductance_model') is created from 'formula' and 'covariates' via 'model.matrix'. This is largely useful for creating dummy codings of categorical variables, expanding interactions, and so on.
}
\examples{
library(raster)

data(melip)

covariates <- raster::stack(list(altitude=melip.altitude, forestcover=melip.forestcover))
surface <- radish_conductance_surface(covariates, melip.coords, directions = 8)

}
\references{
Pope NS. In prep. Fast gradient-based optimization of resistance surfaces.
}
