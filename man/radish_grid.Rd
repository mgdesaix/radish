% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/radish_grid.R
\name{radish_grid}
\alias{radish_grid}
\title{Evaluate likelihood of a parameterized conductance surface}
\usage{
radish_grid(
  theta,
  formula,
  data,
  conductance_model = radish::loglinear_conductance,
  measurement_model = radish::mlpe,
  nu = NULL,
  nonnegative = TRUE,
  conductance = TRUE,
  covariance = FALSE
)
}
\arguments{
\item{theta}{A matrix of dimension (grid size) x (number of parameters)}

\item{formula}{A formula with the name of a matrix of observed genetic distances on the lhs, and covariates in the creation of \code{data} on the rhs}

\item{data}{An object of class \code{radish_graph} (see \code{\link{conductance_surface}})}

\item{conductance_model}{A function of class \code{radish_conductance_model_factory} (see \code{\link{radish_conductance_model_factory}})}

\item{measurement_model}{A function of class \code{radish_measurement_model} (see \code{\link{radish_measurement_model}})}

\item{nu}{Number of genetic markers (potentially used by \code{measurement_model})}

\item{nonnegative}{Force regression-like \code{measurement_model} to have nonnegative slope?}

\item{conductance}{If \code{TRUE}, edge conductance is the sum of cell conductances; otherwise edge conductance is the inverse of the sum of cell resistances (unused; TODO)}

\item{covariance}{If \code{TRUE}, additionally return (a submatrix of) the generalized inverse of graph Laplacian across the grid}
}
\value{
An object of class \code{radish_grid}, containing:
}
\description{
Calculates the profile likelihood of a parameterized conductance surface across
a grid of parameter values (e.g. the nuisance parameters are optimized at each
point on the grid).
}
\examples{

library(raster)

data(melip)

covariates <- raster::stack(list(altitude = raster::scale(melip.altitude), 
                                 forestcover = raster::scale(melip.forestcover)))

fit_mlpe <- radish(melip.Fst ~ altitude * forestcover, data = surface, 
                   radish::loglinear_conductance, radish::mlpe)

theta <- as.matrix(expand.grid(forestcover=seq(-1,1,length.out=21), 
                               altitude=seq(-1,1,length.out=21)))

grid <- radish_grid(theta, melip.Fst ~ forestcover + altitude, surface,
                    radish::loglinear_conductance, radish::mlpe)

library(ggplot2)
ggplot(data.frame(loglik=grid$loglik, grid$theta), 
       aes(x=forestcover, y=altitude)) + 
  geom_tile(aes(fill=loglik)) + 
  geom_contour(aes(z=loglik), color="black") +
  annotate(geom = "point", colour = "red",
           x = coef(fit_mlpe)["forestcover"], 
           y = coef(fit_mlpe)["altitude"]) +
  theme_bw() +
  xlab(expression(theta[altitude])) +
  ylab(expression(theta[forestcover]))

}
