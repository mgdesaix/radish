% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generalized_wishart.R
\name{generalized_wishart}
\alias{generalized_wishart}
\title{Generalized Wishart distance regression}
\usage{
generalized_wishart(
  E,
  S,
  phi,
  nu,
  gradient = TRUE,
  hessian = TRUE,
  partial = TRUE,
  nonnegative = TRUE,
  validate = FALSE
)
}
\arguments{
\item{E}{A submatrix of the generalized inverse of the graph Laplacian (alternatively, a covariance matrix)}

\item{S}{A matrix of observed genetic distances}

\item{phi}{Nuisance parameters (see details)}

\item{nu}{Number of genetic markers}

\item{gradient}{Compute gradient of negative loglikelihood wrt phi?}

\item{hessian}{Compute Hessian matrix of negative loglikelihood wrt phi?}

\item{partial}{Compute second partial derivatives of negative loglikelihood wrt phi and spatial covariates/observed genetic distances}

\item{nonnegative}{Ignored}

\item{validate}{Numerical validation via 'numDeriv' (very slow, use for debugging small examples)}
}
\value{
A list containing at a minimum:
 \item{covariance}{rows/columns of the generalized inverse of the graph Laplacian for a subset of target vertices}
Additionally, if 'objective == TRUE':
 \item{objective}{(if 'objective') the negative loglikelihood}
 \item{fitted}{((if 'objective') a matrix of expected genetic distances among target vertices}
 \item{boundary}{(if 'objective') is the MLE on the boundary (e.g. no genetic structure)?}
 \item{gradient}{(if 'gradient') gradient of negative loglikelihood with respect to phi}
 \item{hessian}{(if 'hessian') Hessian matrix of the negative loglikelihood with respect to phi}
 \item{gradient_E}{(if 'partial') gradient with respect to the generalized inverse of the graph Laplacian}
 \item{partial_E}{(if 'partial') Jacobian of 'gradient_E' with respect to phi}
 \item{partial_S}{(if 'partial') Jacobian of 'gradient_E' with respect to phi}
 \item{jacobian_E}{(if 'partial') a function used for reverse algorithmic differentiation}
 \item{jacobian_S}{(if 'partial') a function used for reverse algorithmic differentiation}
}
\description{
A function of class "measurement_model" that calculates likelihood,
gradient, hessian, and partial derivatives of nuisance parameters and the
Laplacian generalized inverse, using the generalized Wishart model of
McCullagh (2009) and Peterson et al (2019).
}
\details{
The nuisance parameters are the scaling of the generalized inverse of the graph Laplacian (can be zero) and 
the log scalar multiple of the identity matrix that is added to the generalized inverse.

TODO: formula
}
\examples{
library(raster)

data(melip)

covariates <- raster::stack(list(altitude=melip.altitude, forestcover=melip.forestcover))
surface <- radish_conductance_surface(covariates, melip.coords, directions = 8)

# null (IBD) resistance distance
laplacian_inv <- radish_distance(radish::loglinear_conductance, surface, 
                                 theta = matrix(0, 1, 2), covariance = TRUE)$covariance[,,1]

generalized_wishart(laplacian_inv, melip.Fst, phi = c(0.1, 0.5), nu = 1000)

}
\references{
McCullagh P. 2009. Marginal likelihood for distance matrices. Statistica Sinica 19
Peterson et al. 2019. TODO
}
